---------------------------------------------------------------
GABE:
Central:
* Switch matchbytype and returntype order in XMany
* Replace append loops with append(x, y...)
* Add matrix transformation to race tutorial
* Add Depth variable to stack
* Case testing
 - Implement casting interfaces as respective pointer type when assigning... see test.go, ensure wherever a card is gotten that a new pointer variable is returned
* Document gostack linear algebra functions - could they all just be multi-dimensional lambda functions??
 - transpose
 - dot
 - matrix multi
 - etc
Peripheral:
* Implement new lambda examples
 - For REPLACE_Lambda
 - For stack.Sort()
 - For stack.Lambda()
* Update race.md and related documentation
 - Fix taskC.replace()
* Implement variadic error-catching function for:
 - bad argument conditions (fmt.Errorf()) (like if-then style in Move with all functions)
 - when requires clause was not fulfilled
* Add "How to Import" to README
* Add "Introduction" README with 1. first thing you can do, 2. second you can do, etc
* Merge wip to main

---------------------------------------------------------------
ANDY:
* Update JDoc documentation to what the actual jcomments are for functions (just copy+paste)
* Add IsEmpty() function (just stack.Has()) to bootstrap, update push and pop in bootstrap (should just be the same as add and extract)
* Replace unnecessary for loops with slices when there's no efficiency loss
* Implement case tests for functions listed in IMPLEMENTED UNTESTED DOCUMENTED FUNCTIONS list below (make sure to implement them in order)
 - See unaddedcases.txt for reference
* Fix faulty classical go code in tutorials/race.md
 - I am avoiding for-loop cloning incorrectly since the for-loop is iterating over a map, see my StackOverflow post https://stackoverflow.com/questions/20185511/range-references-instead-values/72740187#72740187
 - Remove comments saying "avoid for-loop cloning"
 - Update percentage descriptions corresponding to amount of lines after update
 - The initial map cannot have two of the same key, meaning we have to implement x_KEYNAME for each key in the map and then decode this within the procedure
* Lambda tutorial updates
 - Replace makeSampleStack() with MakeStack() from frontend.go
 - Implement for values other than ints
 - Make some more lambda function examples which use workingMem param
 - Remove MainFunc, replace MainFunc calls in Lambda() with Get() and other frontend functions
* Implement bootstrap functions, take inspiration from common functions in other languages
* Implement ObjectReference tutorial
 - Add passing-by-object vs passing-by-address tutorial (just & before variable, our functions support that)

---------------------------------------------------------------
IMPLEMENTED TESTED WORKING DOCUMENTED FUNCTIONS:
/

IMPLEMENTED TESTED BROKEN DOCUMENTED FUNCTIONS:
/

IMPLEMENTED UNTESTED DOCUMENTED FUNCTIONS:
stack.Has, stack.Move, stack.Extract, stack.Get, stack.GetMany, stack.Add, MakeCard, stack.Empty, stack.Clone, card.Clone, stack.Unique, stack.ToArray, stack.ToMap, stack.Shuffle, stack.Flip, stack.Print, card.Print, stack.Replace, stack.ExtractMany, stack.ReplaceMany, stack.Remove, stack.RemoveMany, stack.Update, stack.UpdateMany, stack.Lambda, stack.Sort, MakeStack, ToMatrix, stack.StripStackMatrix, MakeStackMatrix

OUTDATED FUNCTIONS:
Move

UNIMPLEMENTED PARTIALLY DOCUMENTED FUNCTIONS:
/

UNIMPLEMENTED UNDOCUMENTED FUNCTIONS:
/
